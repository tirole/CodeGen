<#@ template language="C#" linePragmas="false" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<# if (Info.DoxyBrief != null && Info.DoxyBrief != "") { #>
/*
 * @brief    <#=Info.DoxyBrief#>
 */
<# }#><##>
class <#=Info.Name#>
{
public:
<#  foreach(var info in Info.PrivateMemberVariableInfos) { #>
<#if(info.IsDefineAccessor) {#>
    /*
     * @brief    <#=info.NameAlias #>をセットします。
     */
<#if(info.IsInlineAccessor) {#>
<#if(info.IsAccessorReturnThis) {#>
    <#=Info.Name #>& Set<#=info.AccessorName #>(<#=info.Type#> <#=char.ToLower(info.AccessorName[0]) + info.AccessorName.Substring(1) #>)
    {
        <#=info.VariableName #> = <#=char.ToLower(info.AccessorName[0]) + info.AccessorName.Substring(1) #>;
        return *this;
    }
<#  } else { #>
    void Set<#=info.AccessorName #>(<#=info.Type#> <#=char.ToLower(info.AccessorName[0]) + info.AccessorName.Substring(1) #>)
    {
        <#=info.VariableName #> = <#=char.ToLower(info.AccessorName[0]) + info.AccessorName.Substring(1) #>;
    }
    <#  } #>
<#  } else { #>
<#if(info.IsAccessorReturnThis) {#>
    <#=Info.Name #>& Set<#=info.AccessorName #>(<#=info.Type#> <#=char.ToLower(info.AccessorName[0]) + info.AccessorName.Substring(1) #>);
<#  } else { #>
    void Set<#=info.AccessorName #>(<#=info.Type#> <#=char.ToLower(info.AccessorName[0]) + info.AccessorName.Substring(1) #>);
<#  } #>
<#  } #>
<#  } #>

<#  } #>
<#  foreach(var info in Info.PrivateMemberVariableInfos) { #>
<#if(info.IsDefineAccessor) {#>
    /*
     * @brief    <#=info.NameAlias #>を取得します。
     */
<#if(info.IsInlineAccessor) {#>
    <#=info.Type#> Get<#=info.AccessorName #>() const
    {
        return <#=info.VariableName #>;
    }
<#  } else { #>
<#if(info.IsAccessorReturnThis) {#>
    <#=Info.Name #>& Get<#=info.AccessorName #>(<#=info.Type#> <#=char.ToLower(info.AccessorName[0]) + info.AccessorName.Substring(1) #>);
<#  } else { #>
    <#=info.Type#> Get<#=info.AccessorName #>() const;
<#  } #>
<#  } #>
<#  } #>

<#  } #>
private:
<#  foreach(var info in Info.PrivateMemberVariableInfos) { #>
    <#=info.Type#> <#=info.VariableName#>;
<#  } #>
};